{"ast":null,"code":"var _jsxFileName = \"/Users/marcuslit/Documents/source-code/untitled folder/argo/black_trivia_project/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const token = localStorage.getItem('accessToken');\n  useEffect(() => {\n    fetchLeaderboard();\n  }, []);\n  const fetchLeaderboard = async () => {\n    try {\n      const res = await axios.get('http://127.0.0.1:8000/api/leaderboard/', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setLeaderboard(res.data);\n    } catch (error) {\n      console.error('Failed to fetch leaderboard:', error);\n    }\n  };\n  const fetchRandomQuestion = async () => {\n    try {\n      const res = await axios.get('http://127.0.0.1:8000/api/questions/random/', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setQuestion(res.data);\n    } catch (error) {\n      console.error('Failed to fetch question:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchRandomQuestion,\n      children: \"Get Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), question && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question.question_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: question.answer_choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: choice\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: leaderboard.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [player.user, \": \", player.points, \" points\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"MUu5SmsUaz7dfJldmTwgkigJTbw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Dashboard","_s","question","setQuestion","leaderboard","setLeaderboard","token","localStorage","getItem","fetchLeaderboard","res","get","headers","Authorization","data","error","console","fetchRandomQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question_text","answer_choices","map","choice","index","player","user","points","_c","$RefreshReg$"],"sources":["/Users/marcuslit/Documents/source-code/untitled folder/argo/black_trivia_project/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Dashboard = () => {\n    const [question, setQuestion] = useState(null);\n    const [leaderboard, setLeaderboard] = useState([]);\n    const token = localStorage.getItem('accessToken');\n\n    useEffect(() => {\n        fetchLeaderboard();\n    }, []);\n\n    const fetchLeaderboard = async () => {\n        try {\n            const res = await axios.get('http://127.0.0.1:8000/api/leaderboard/', {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setLeaderboard(res.data);\n        } catch (error) {\n            console.error('Failed to fetch leaderboard:', error);\n        }\n    };\n\n    const fetchRandomQuestion = async () => {\n        try {\n            const res = await axios.get('http://127.0.0.1:8000/api/questions/random/', {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setQuestion(res.data);\n        } catch (error) {\n            console.error('Failed to fetch question:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Game Dashboard</h1>\n            <button onClick={fetchRandomQuestion}>Get Question</button>\n            {question && (\n                <div>\n                    <h2>{question.question_text}</h2>\n                    <ul>\n                        {question.answer_choices.map((choice, index) => (\n                            <li key={index}>{choice}</li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n            <h3>Leaderboard</h3>\n            <ul>\n                {leaderboard.map((player, index) => (\n                    <li key={index}>\n                        {player.user}: {player.points} points\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}